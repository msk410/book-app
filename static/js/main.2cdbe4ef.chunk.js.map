{"version":3,"sources":["actions/actions.js","components/SearchBar.js","components/BookInfo.js","components/App.js","serviceWorker.js","reducers/rootReducer.js","reducers/reducer.js","apiCalls/apicalls.js","sagas/saga.js","index.js"],"names":["SAVE_BOOK_DATA","GET_BOOK_DATA","getBookData","searchParams","type","saveBookData","bookData","SearchBar","e","preventDefault","this","props","target","value","_this","react_default","a","createElement","className","onSubmit","handleSearch","Component","connect","state","dispatch","bindActionCreators","BookInfo","style","display","src","volumeInfo","imageLinks","smallThumbnail","title","authors","publisher","saleInfo","buyLink","Button","href","App","components_SearchBar","class","data","items","map","book","components_BookInfo","Boolean","window","location","hostname","match","rootReducer","combineReducers","testReducer","arguments","length","undefined","Object","objectSpread","action","fetchData","url","axios","get","then","response","catch","error","getBookDataSaga","rootSaga","regenerator_default","wrap","_context","prev","next","takeEvery","stop","_marked","_ref","_context2","call","sent","put","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","run","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cdbe4ef.chunk.js","sourcesContent":["export const SAVE_BOOK_DATA = \"SAVE_BOOK_DATA\";\nexport const GET_BOOK_DATA = \"GET_BOOK_DATA\";\n\nexport function testAction() {\n  return {\n    type:\"TEST_ACTION\"\n  }\n}\nexport function getBookData(searchParams) {\n  return {\n    type: GET_BOOK_DATA,\n    searchParams\n  };\n}\n\nexport function saveBookData(bookData) {\n  return {\n    type: SAVE_BOOK_DATA,\n    bookData\n  };\n}\n","import React, { Component } from \"react\";\nimport { getBookData, testAction } from \"../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass SearchBar extends Component {\n  handleSearch(e) {\n    e.preventDefault();\n    this.props.getBookData(e.target[0].value);\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"align-items-center\">\n          <h1>BOOK FINDER</h1>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-8 offset-sm-2\">\n              <form onSubmit={e => this.handleSearch(e)}>\n                <div className=\"input-group mb-3\">\n                  <input type=\"text\" className=\"form-control\" />\n                  <div className=\"input-group-append\">\n                    <button className=\"btn btn-outline-secondary\" type=\"button\">\n                      Search\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      getBookData,\n    },\n    dispatch\n  );\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Button } from \"react-bootstrap\";\n\nclass BookInfo extends Component {\n  render() {\n    return (\n      <div>\n        <div style={{ display: \"inline-block\" }}>\n          <img\n            src={\n              !!this.props.volumeInfo.imageLinks &&\n              !!this.props.volumeInfo.imageLinks.smallThumbnail\n                ? this.props.volumeInfo.imageLinks.smallThumbnail\n                : \"\"\n            }\n          />\n        </div>\n        <div style={{ display: \"inline-block\" }}>\n          <p>\n            {!!this.props.volumeInfo.title\n              ? this.props.volumeInfo.title\n              : \"No title found\"}\n          </p>\n          <p>\n            By:{\" \"}\n            {!!this.props.volumeInfo.authors\n              ? this.props.volumeInfo.authors\n              : \"No authors found\"}\n          </p>\n          <p>\n            Published by:{\" \"}\n            {!!this.props.volumeInfo.publisher\n              ? this.props.volumeInfo.publisher\n              : \"No publisher found\"}\n          </p>\n        </div>\n        {!!this.props.saleInfo && !!this.props.saleInfo.buyLink && (\n          <Button href={this.props.saleInfo.buyLink}>Buy it now!</Button>\n        )}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BookInfo);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport SearchBar from \"./SearchBar\";\nimport BookInfo from \"./BookInfo\";\n// import {testAction} from '../actions/actions'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <SearchBar />\n        <div class=\"container\">\n          <div class=\"row\">\n            {!!this.props.bookData &&\n              this.props.bookData != \"error\" &&\n              this.props.bookData.data.items.map(book => (\n                <div className=\"col-sm\">\n                  <BookInfo volumeInfo={book.volumeInfo} saleInfo={book.saleInfo} />\n                </div>\n              ))}\n          </div>\n        </div>\n        {!!this.props.bookData && this.props.bookData === \"error\" && (\n          <div className=\"align-items-center\">\n            Nothing found. Try another search.\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    bookData: state.bookData.bookData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { testReducer, bookData } from \"./reducer\";\n\nconst rootReducer = combineReducers({\n  testReducer,\n  bookData\n});\n\nexport default rootReducer;\n","export function testReducer(state = {}, action) {\n  switch (action.type) {\n    case \"TEST_ACTION\":\n    return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}\n\nexport function bookData(state = {}, action) {\n  switch (action.type) {\n    case \"SAVE_BOOK_DATA\":\n      return {\n        ...state,\n        bookData: action.bookData\n      };\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\nexport function fetchData(url) {\n  return axios\n    .get(url)\n    .then(response => ({ response }))\n    .catch(error => ({ error }));\n}\n","import { call, takeEvery, all, put } from \"redux-saga/effects\";\nimport { fetchData } from \"../apiCalls/apicalls\";\nimport { saveBookData } from \"../actions/actions\";\n\nexport function* getBookDataSaga() {\n  yield takeEvery(\"GET_BOOK_DATA\", getBookData);\n}\n\nexport function* getBookData(action) {\n  let url =\n    \"https://www.googleapis.com/books/v1/volumes?q=\" + action.searchParams;\n  const { response, error } = yield call(fetchData, url);\n  if(response) {\n    yield put(saveBookData(response))\n  } else if(error) {\n    yield put(saveBookData(\"error\"))\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([getBookDataSaga()]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n// import rootSaga from \"./sagas/rootSaga\";\nimport rootSaga from \"./sagas/saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nlet store = createStore(rootReducer, compose(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}